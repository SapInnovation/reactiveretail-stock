buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.junit.platform:junit-platform-gradle-plugin:1.0.2")
        classpath("se.transmode.gradle:gradle-docker:1.2")

    }

    description = 'exposer'
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
     mavenCentral()
}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-devtools'

    compile project(':stock-common')

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'

    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'

    testRuntime 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.3'
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }

     failFast = true
}

jacoco {
    toolVersion = '0.7.9'
    applyTo junitPlatformTest
}

junitPlatformTest {
    jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}

// Generate code coverage reports ... run with jacoco
jacocoTestReport{
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
            xml.enabled = true
            csv.enabled = false
            html.enabled = true
        }
    executionData = files("$buildDir/jacoco/test.exec")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = 'sapinnovation'
        name = 'retailstock'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SapInnovation/reactiveretail-stock.git'
		version {
			name = '1.0-Final'
			desc = 'retail-stock-final'
			vcsTag = '1.3.0'
		}
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'sap.reactiveretail'
            artifactId 'stock-exposer'
            version '1.1'
        }
    }
}